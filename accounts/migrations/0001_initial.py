# Generated by Django 5.2.5 on 2025-08-25 23:11

import accounts.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAvatar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=accounts.models.user_avatar_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png', 'gif'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='avatar', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='UserDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to=accounts.models.user_document_path)),
                ('document_type', models.CharField(choices=[('id', 'ID Document'), ('resume', 'Resume'), ('certificate', 'Certificate'), ('contract', 'Contract'), ('other', 'Other')], default='other', max_length=20)),
                ('is_private', models.BooleanField(default=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='UserNotificationSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_task_reminders', models.BooleanField(default=True)),
                ('email_task_assignments', models.BooleanField(default=True)),
                ('email_project_updates', models.BooleanField(default=True)),
                ('email_team_invitations', models.BooleanField(default=True)),
                ('email_weekly_summary', models.BooleanField(default=True)),
                ('email_marketing', models.BooleanField(default=False)),
                ('push_task_reminders', models.BooleanField(default=True)),
                ('push_task_assignments', models.BooleanField(default=True)),
                ('push_project_updates', models.BooleanField(default=False)),
                ('push_team_invitations', models.BooleanField(default=True)),
                ('app_task_reminders', models.BooleanField(default=True)),
                ('app_task_assignments', models.BooleanField(default=True)),
                ('app_project_updates', models.BooleanField(default=True)),
                ('app_team_invitations', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(default='22:00')),
                ('quiet_hours_end', models.TimeField(default='07:00')),
                ('weekend_notifications', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dashboard_widgets', models.JSONField(default=list)),
                ('dashboard_layout', models.CharField(choices=[('grid', 'Grid Layout'), ('list', 'List Layout'), ('compact', 'Compact Layout')], default='grid', max_length=20)),
                ('tasks_per_page', models.IntegerField(default=25)),
                ('default_task_view', models.CharField(choices=[('list', 'List View'), ('kanban', 'Kanban Board'), ('calendar', 'Calendar View'), ('timeline', 'Timeline View')], default='list', max_length=20)),
                ('show_task_descriptions', models.BooleanField(default=True)),
                ('show_task_due_dates', models.BooleanField(default=True)),
                ('show_task_priorities', models.BooleanField(default=True)),
                ('show_task_contexts', models.BooleanField(default=True)),
                ('work_hours_start', models.TimeField(default='09:00')),
                ('work_hours_end', models.TimeField(default='17:00')),
                ('break_duration', models.IntegerField(default=15)),
                ('focus_session_duration', models.IntegerField(default=25)),
                ('export_format', models.CharField(choices=[('json', 'JSON'), ('csv', 'CSV'), ('pdf', 'PDF'), ('xlsx', 'Excel')], default='json', max_length=10)),
                ('two_factor_enabled', models.BooleanField(default=False)),
                ('login_notifications', models.BooleanField(default=True)),
                ('session_timeout', models.IntegerField(default=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], max_length=20)),
                ('address', models.TextField(blank=True)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('job_title', models.CharField(blank=True, max_length=200)),
                ('company', models.CharField(blank=True, max_length=200)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('theme', models.CharField(choices=[('light', 'Light Theme'), ('dark', 'Dark Theme'), ('auto', 'Auto (System)')], default='auto', max_length=10)),
                ('language', models.CharField(choices=[('en', 'English'), ('es', 'Spanish'), ('fr', 'French'), ('de', 'German'), ('zh', 'Chinese'), ('ja', 'Japanese')], default='en', max_length=5)),
                ('date_format', models.CharField(default='MM/DD/YYYY', max_length=20)),
                ('time_format', models.CharField(choices=[('12h', '12 Hour'), ('24h', '24 Hour')], default='12h', max_length=10)),
                ('default_task_priority', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Urgent')], default=2)),
                ('default_task_context', models.CharField(blank=True, max_length=100)),
                ('show_completed_tasks', models.BooleanField(default=False)),
                ('task_reminder_time', models.IntegerField(default=15)),
                ('profile_visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('team', 'Team Only')], default='private', max_length=10)),
                ('allow_task_sharing', models.BooleanField(default=True)),
                ('allow_team_invitations', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_users', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan', models.CharField(choices=[('free', 'Free Plan'), ('basic', 'Basic Plan'), ('premium', 'Premium Plan'), ('enterprise', 'Enterprise Plan')], default='free', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('trial', 'Trial')], default='active', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True)),
                ('auto_renew', models.BooleanField(default=False)),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Monthly'), ('yearly', 'Yearly')], default='monthly', max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=100)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=100)),
                ('tasks_limit', models.IntegerField(default=50)),
                ('projects_limit', models.IntegerField(default=5)),
                ('storage_limit_mb', models.IntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TeamInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invitee_email', models.EmailField(max_length=254)),
                ('role', models.CharField(choices=[('member', 'Member'), ('admin', 'Admin'), ('manager', 'Manager'), ('viewer', 'Viewer')], default='member', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('message', models.TextField(blank=True)),
                ('token', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('invitee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_invitations', to=settings.AUTH_USER_MODEL)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('inviter', 'invitee_email')},
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'User Login'), ('logout', 'User Logout'), ('password_change', 'Password Changed'), ('profile_update', 'Profile Updated'), ('email_verification', 'Email Verified'), ('password_reset', 'Password Reset'), ('avatar_upload', 'Avatar Uploaded'), ('document_upload', 'Document Uploaded'), ('settings_change', 'Settings Changed'), ('account_deactivation', 'Account Deactivated'), ('account_reactivation', 'Account Reactivated'), ('data_export', 'Data Exported'), ('privacy_settings_change', 'Privacy Settings Changed')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('details', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'action', 'timestamp'], name='accounts_us_user_id_3f73c8_idx'), models.Index(fields=['timestamp'], name='accounts_us_timesta_d708d4_idx')],
            },
        ),
    ]
